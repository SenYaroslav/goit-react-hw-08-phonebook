{"version":3,"file":"static/js/855.c8e6c1a5.chunk.js","mappings":"sNACA,EAAkC,qCAAlC,EAA0F,sCAA1F,EAAmJ,sCAAnJ,EAA0M,oC,UCD7LA,EAAW,SAAAC,GAAK,OAAIA,EAAMD,QAAV,EAEhBE,EAAS,SAAAD,GAAK,OAAIA,EAAMC,MAAV,E,mBC8E3B,EAzEoB,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACTC,GAAUC,EAAAA,EAAAA,IAAYX,GAAtBU,MAEFE,EAAe,SAAAC,GACU,SAAzBA,EAAEC,cAAcV,MAClBC,EAAQQ,EAAEC,cAAcC,OAEG,WAAzBF,EAAEC,cAAcV,MAClBG,EAAUM,EAAEC,cAAcC,MAE7B,EAeKC,EAAQ,WACZX,EAAQ,IACRE,EAAU,GACX,EAED,OACE,kBAAMU,UAAWC,EAAqBC,SAnBnB,SAAAN,GACnBA,EAAEO,iBAEeV,EAAMW,KAAI,SAAAC,GAAO,OAAIA,EAAQlB,IAAZ,IAErBmB,SAASnB,GACpBoB,MAAM,GAAD,OAAIpB,EAAJ,6BAELI,GAASiB,EAAAA,EAAAA,IAAW,CAAErB,KAAAA,EAAME,OAAAA,KAC5BU,IAEH,EAQC,WACE,mBAAOC,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXQ,KAAK,OACLtB,KAAK,OACLuB,QAAQ,yHACRC,MAAM,yIACNC,SAAUjB,EACVG,MAAOX,EACP0B,UAAQ,QAGZ,mBAAOb,UAAWC,EAAlB,oBAEE,kBACED,UAAWC,EACXQ,KAAK,MACLtB,KAAK,SACLuB,QAAQ,yFACRC,MAAM,+FACNC,SAAUjB,EACVG,MAAOT,EACPwB,UAAQ,QAGZ,oBAAQb,UAAWC,EAAoBQ,KAAK,SAA5C,WACE,SAAC,MAAD,CACEK,KAAM,QACNC,MAAO,CAAEC,cAAe,SAAUC,YAAa,UAHnD,mBASL,EC7ED,EAAoC,kCAApC,EAAsF,8BAAtF,EAAoI,8B,UCiCpI,EA5Be,SAAC,GAAe,IAAbN,EAAY,EAAZA,MACVpB,GAAWC,EAAAA,EAAAA,MASjB,OACE,gBAAKQ,UAAWC,EAAhB,UACE,mBAAOD,UAAWC,EAAlB,UACGU,GACD,kBACEX,UAAWC,EACXQ,KAAK,OACLtB,KAAK,OACLuB,QAAQ,yHACRC,MAAM,yIACNC,SAjBkB,SAAAhB,GACxB,IACMsB,EADQtB,EAAEC,cAAcC,MACLqB,OAAOC,cAEhC7B,GAAS8B,EAAAA,EAAAA,GAAUH,GACpB,EAaOL,UAAQ,QAKjB,EC/BD,EAAgC,mCAAhC,EAAmF,mCAAnF,EAAwI,qCAAxI,EAA4L,kCC+B5L,EAzBoB,SAAC,GAA0B,IAAxBS,EAAuB,EAAvBA,GAAInC,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACzBE,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBAAIQ,UAAWC,EAAmBqB,GAAIA,EAAtC,WACE,eAAGtB,UAAWC,EAAd,WACE,SAAC,MAAD,CACEc,MAAO,CAAEC,cAAe,SAAUC,YAAa,UAEhD9B,MAEH,kBAAMa,UAAWC,EAAjB,UACGZ,GACD,mBACEW,UAAWC,EACXQ,KAAK,SACLc,QAAS,kBAAMhC,GAASiC,EAAAA,EAAAA,IAAcF,GAA7B,EAHX,yBAUP,EC7BD,EAAiC,oCC+BjC,EAzBoB,WAClB,IAAMG,GAAW/B,EAAAA,EAAAA,IAAYT,GAC7B,GAAoCS,EAAAA,EAAAA,IAAYX,GAAxCU,EAAR,EAAQA,MAAOiC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,MAEpBC,EAAqBnC,EAAMR,QAAO,SAAAoB,GAAO,OAC7CA,EAAQlB,KAAKiC,cAAcd,SAASmB,EADS,IAI/C,OACE,iCACE,2BACGC,IAAa,+CACbC,IAAS,uBAAIA,OAEfC,IACC,eAAI5B,UAAWC,EAAf,SACG2B,EAAmBxB,KAAI,gBAAGkB,EAAH,EAAGA,GAAInC,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACtB,SAAC,EAAD,CAAsBiC,GAAIA,EAAInC,KAAMA,EAAME,OAAQA,GAAhCiC,EADI,QAOjC,ECMD,EA7BiB,WACf,IAAM/B,GAAWC,EAAAA,EAAAA,MAMjB,OAJAqC,EAAAA,EAAAA,YAAU,WACRtC,GAASuC,EAAAA,EAAAA,MACV,GAAE,CAACvC,KAGF,iBACEwB,MAAO,CACLgB,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,QAAS,OACTC,UAAW,aACXC,SAAU,QARd,WAWE,uCACA,SAAC,EAAD,KAEA,sCACA,SAAC,EAAD,CAAQ1B,MAAM,2BACd,SAAC,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","Pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"phoneBook__form\":\"ContactForm_phoneBook__form__kak-U\",\"phoneBook__label\":\"ContactForm_phoneBook__label__qLIEh\",\"phoneBook__input\":\"ContactForm_phoneBook__input__kfDqD\",\"phoneBook__btn\":\"ContactForm_phoneBook__btn__E9pbU\"};","export const contacts = state => state.contacts;\n\nexport const filter = state => state.filter;\n","import React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { contacts } from 'redux/contacts/selectors';\nimport { BsPersonPlusFill } from 'react-icons/bs';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const { items } = useSelector(contacts);\n\n  const handleChange = e => {\n    if (e.currentTarget.name === 'name') {\n      setName(e.currentTarget.value);\n    }\n    if (e.currentTarget.name === 'number') {\n      setNumber(e.currentTarget.value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const nameList = items.map(contact => contact.name);\n\n    if (nameList.includes(name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact({ name, number }));\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.phoneBook__form} onSubmit={handleSubmit}>\n      <label className={css.phoneBook__label}>\n        Name\n        <input\n          className={css.phoneBook__input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n          value={name}\n          required\n        />\n      </label>\n      <label className={css.phoneBook__label}>\n        Number\n        <input\n          className={css.phoneBook__input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleChange}\n          value={number}\n          required\n        />\n      </label>\n      <button className={css.phoneBook__btn} type=\"submit\">\n        <BsPersonPlusFill\n          size={'1.5em'}\n          style={{ verticalAlign: 'bottom', marginRight: '10px' }}\n        />\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__container\":\"Filter_filter__container__yLJ5F\",\"filter__label\":\"Filter_filter__label__ttfPR\",\"filter__input\":\"Filter_filter__input__toa89\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nconst Filter = ({ title }) => {\n  const dispatch = useDispatch();\n\n  const handleFilterInput = e => {\n    const value = e.currentTarget.value;\n    const normalized = value.trim().toLowerCase()\n\n    dispatch(setFilter(normalized));\n  };\n\n  return ( \n    <div className={css.filter__container}>\n      <label className={css.filter__label}>\n        {title}\n        <input\n          className={css.filter__input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleFilterInput}\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact__item\":\"ContactItem_contact__item__uEsk+\",\"contact__name\":\"ContactItem_contact__name__Lc556\",\"contact__number\":\"ContactItem_contact__number__+fwbo\",\"contact__btn\":\"ContactItem_contact__btn__epUtq\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport css from './ContactItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { BsFileEarmarkPerson } from 'react-icons/bs';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={css.contact__item} id={id}>\n      <p className={css.contact__name}>\n        <BsFileEarmarkPerson\n          style={{ verticalAlign: 'bottom', marginRight: '10px' }}\n        />\n        {name}\n      </p>\n      <span className={css.contact__number}>\n        {number}\n        <button\n          className={css.contact__btn}\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          Delete\n        </button>\n      </span>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts__list\":\"ContactList_contacts__list__hSN0M\"};","import React from 'react';\nimport ContactItem from '../ContactItem/ContactItem';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { contacts } from 'redux/contacts/selectors';\nimport { filter } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const filtered = useSelector(filter);\n  const { items, isLoading, error } = useSelector(contacts);\n\n  const getVisibleContacts = items.filter(contact =>\n    contact.name.toLowerCase().includes(filtered)\n  );\n\n  return (\n    <>\n      <div>\n        {isLoading && <p>Loading contacts...</p>}\n        {error && <p>{error}</p>}\n      </div>\n      {getVisibleContacts && (\n        <ul className={css.contacts__list}>\n          {getVisibleContacts.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { fetchAll } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAll());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: '30px',\n        boxSizing: 'border-box',\n        fontSize: '18px',\n      }}\n    >\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter title=\"Find contacts by name\" />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["contacts","state","filter","useState","name","setName","number","setNumber","dispatch","useDispatch","items","useSelector","handleChange","e","currentTarget","value","reset","className","css","onSubmit","preventDefault","map","contact","includes","alert","addContact","type","pattern","title","onChange","required","size","style","verticalAlign","marginRight","normalized","trim","toLowerCase","setFilter","id","onClick","deleteContact","filtered","isLoading","error","getVisibleContacts","useEffect","fetchAll","display","flexDirection","justifyContent","alignItems","padding","boxSizing","fontSize"],"sourceRoot":""}